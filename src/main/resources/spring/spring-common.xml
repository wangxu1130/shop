<?xml version="1.0" encoding="GBK"?>
	<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"  
    xmlns:security="http://www.springframework.org/schema/security"  
    xsi:schemaLocation="  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
        http://www.springframework.org/schema/security   
        http://www.springframework.org/schema/security/spring-security-3.2.xsd  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/data/jpa   
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd  
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">


    <!--扫描service层让注解生效-->
    <context:component-scan base-package="com.fh.api.admin.*.biz"/>

      <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:spring/datasource.properties"/>




	 <!-- 配置数据库连接池 -->
    <bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="url">
            <value>${jdbc.dbcp.fh.url}</value>
        </property>
        <property name="driverClassName">
            <value>${jdbc.driverClassName}</value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        <!-- 连接池中的最大的连接数 -->
        <property name="maxActive">
            <value>${jdbc.maxActive}</value>
        </property>
        <!-- 最大等待的时间 (单位:毫秒) -->
        <property name="maxWait">
            <value>${jdbc.maxWait}</value>
        </property>
    </bean>
    
    <!--构造方法注入-->
    <!--<bean id="dept" class="com.fh.shop.admin.po.dept.Dept">
        <constructor-arg index="0" value="sss"></constructor-arg>

    </bean>-->


	 <!--生成sqlsession -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--name是bean类里面的属性名，ref是引入的bean的id，value是对应的值-->
        <property name="dataSource" ref="dataSource" />
        <!-- 为 com.jk.model所有的实体bean自动创建别名。Book:book  UserInfo:userInfo-->
        <!--<property name="typeAliasesPackage" value="com.fh.api.po" />-->

        <!--  自动查找mybatis的xml配置文件，省掉sqlMapConfig.xml里的mappers手工配置 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
    </bean>
    
     <!-- 通过 MapperScannerConfigurer自动扫描指定basePackage中的所有的接口，并且
    把sqlSession与接口结合-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.fh.api.admin.*.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSession" />
    </bean>
    

</beans>
